buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()

        //we need more repos
        maven {
            url 'https://maven.minecraftforge.net'
        }
        maven {
            url 'https://repo.maven.apache.org/maven2'
        }
        maven {
            url 'https://libraries.minecraft.net'
        }
        maven {
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

plugins {
    id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

repositories {
    maven {
        url 'https://repo.spongepowered.org/maven/'
    }
}

configurations {
    embed
    compile.extendsFrom embed
}

dependencies {
    implementation 'org.ow2.asm:asm:5.2'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation files('libs/discord-rpc.jar')
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    embed('org.spongepowered:mixin:0.6-SNAPSHOT') {
        exclude module: 'gson'
        exclude module: 'guava'
        exclude module: 'jarjar'
        exclude module: 'commons-codec'
        exclude module: 'commons-io'
        exclude module: 'launchwrapper'
        exclude module: 'asm-commons'
        exclude module: 'slf4j-api'
    }
}

version = '1.2'
group = 'keystrokesmod'
archivesBaseName = 'BetterKeystrokes'

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    runDir = 'run'

    mappings = 'stable_20'
    makeObfSourceJar = false
    clientJvmArgs += '-Dfml.coreMods.load=keystrokesmod.mixins.MixinLoader'
}

shadowJar {
    classifier = ''
    manifest {
        attributes(
                'FMLCorePlugin': 'keystrokesmod.client.tweaker.FMLLoadingPlugin',
                'ForceLoadAsMod': true,
                'FMLCorePluginContainsFMLMod': true,
                'ModSide': 'CLIENT'
        )
    }
}

reobfJar {
    dependsOn shadowJar
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from(configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        exclude 'dummyThing',
                'LICENSE.txt',
                'META-INF/MUMFREY.RSA',
                'META-INF/maven/**',
                'org/**/*.html'
        exclude 'LICENSE.md'
        exclude 'pack.mcmeta'
        exclude '**/module-info.class'
        exclude '*.so'
        exclude '*.dylib'
        exclude '*.dll'
        exclude '*.jnilib'
        exclude 'ibxm/**'
        exclude 'com/jcraft/**'
        exclude 'org/lwjgl/**'
        exclude 'net/java/**'

        exclude 'META-INF/proguard/**'
        exclude 'META-INF/versions/**'
        exclude 'META-INF/com.android.tools/**'

        exclude 'fabric.mod.json'
    }
    manifest {
        attributes(
                'MixinConfigs': 'mixins.raven.json',
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePlugin': 'keystrokesmod.mixins.MixinLoader',
                'ForceLoadAsMod': true,
                'FMLCorePluginContainsFMLMod': true,
                'ModSide': 'CLIENT'
        )
    }
}