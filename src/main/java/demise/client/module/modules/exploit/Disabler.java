package demise.client.module.modules.exploit;

import demise.client.module.Module;
import demise.client.module.modules.world.Tower;
import demise.client.module.setting.impl.TickSetting;
import demise.client.utils.MathUtils;
import demise.client.utils.Utils;
import demise.client.utils.event.ReceivePacketEvent;
import demise.client.utils.PacketUtils;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent;
import org.apache.commons.lang3.Range;

public class Disabler extends Module {
    public static TickSetting intaveSprintScaffold, miniblox, debug, worldCheck, miniblox2, vulcanScaffold;

    public Disabler() {
        super("Disabler", ModuleCategory.exploit);

        this.registerSetting(intaveSprintScaffold = new TickSetting("Intave Sprint Scaffold", false));
        this.registerSetting(miniblox = new TickSetting("Miniblox", false));
        this.registerSetting(miniblox2 = new TickSetting("Miniblox 2", false));
        this.registerSetting(vulcanScaffold = new TickSetting("Vulcan scaffold", false));
        this.registerSetting(worldCheck = new TickSetting("World check", true));
        this.registerSetting(debug = new TickSetting("Debug", false));
    }

    @SubscribeEvent
    public void onTick(TickEvent.PlayerTickEvent e) {
        if (mc.theWorld == null && worldCheck.isToggled()) {
            this.disable();
        }

        //if this doesn't work blame @liquidsquid1, not me
        if (intaveSprintScaffold.isToggled() && mc.thePlayer.ticksExisted > 80) {
            PacketUtils.sendPacket(
                    mc,
                    new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SNEAKING)
            );
            PacketUtils.sendPacket(
                    mc,
                    new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SNEAKING)
            );
        }

        if (vulcanScaffold.isToggled()) {
            if (mc.thePlayer.ticksExisted % 9 == 0 && MathUtils.rand().nextFloat() <= 0.7f) {
                PacketUtils.sendPacket(mc, new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SNEAKING));
            }

            if (mc.thePlayer.onGround && Tower.towering && MathUtils.rand().nextFloat() <= 0.2f) {
                PacketUtils.sendPacket(mc, new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SNEAKING));
            }

            PacketUtils.sendPacket(mc, new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SPRINTING));
            PacketUtils.sendPacket(mc, new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING));

            if (mc.thePlayer.ticksExisted % 9 == 0 && mc.thePlayer.onGround && !Tower.towering) {
                PacketUtils.sendPacket(mc, new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SNEAKING));
            }
        }
    }

    @SubscribeEvent
    public void onPacket(ReceivePacketEvent e) {
        if (mc.theWorld == null && worldCheck.isToggled()) {
            this.disable();
        }

        if (miniblox2.isToggled()) {
            if (e.getPacket() instanceof S08PacketPlayerPosLook && mc.thePlayer.ticksExisted > 80) {
                S08PacketPlayerPosLook packet = (S08PacketPlayerPosLook) e.getPacket();

                Utils.Player.sendMessageToSelf("x: " + ((int) (packet.getX() - mc.thePlayer.posX)) + " z: " + ((int) (packet.getZ() - mc.thePlayer.posZ)));

                if (Range.between(-Math.max(15, 15 * (int) mc.thePlayer.motionX), Math.max(15, 15 * (int) mc.thePlayer.motionX)).contains((int) (packet.getX() - mc.thePlayer.posX)) &&
                        Range.between(-Math.max(15, 15 * (int) mc.thePlayer.motionZ), Math.max(15, 15 * (int) mc.thePlayer.motionZ)).contains((int) (packet.getZ() - mc.thePlayer.posZ))) {

                    e.setCanceled(true);

                    if (debug.isToggled()) {
                        Utils.Player.sendMessageToSelf("received s08. sending c06");
                    }

                    PacketUtils.sendPacket(mc, new C03PacketPlayer.C06PacketPlayerPosLook(
                                    packet.getX(),
                                    packet.getY(),
                                    packet.getZ(),
                                    packet.getYaw(),
                                    packet.getPitch(),
                                    mc.thePlayer.onGround
                            )
                    );

                    PacketUtils.sendPacket(mc, new C03PacketPlayer.C06PacketPlayerPosLook(
                                    mc.thePlayer.posX,
                                    mc.thePlayer.posY,
                                    mc.thePlayer.posZ,
                                    mc.thePlayer.rotationYaw,
                                    mc.thePlayer.rotationPitch,
                                    mc.thePlayer.onGround
                            )
                    );
                } else if (debug.isToggled()) {
                    Utils.Player.sendMessageToSelf("pos diff is too large. returning");
                }
            }
        } else if (miniblox.isToggled()) {
            if (e.getPacket() instanceof S08PacketPlayerPosLook && mc.thePlayer.ticksExisted > 80) {
                S08PacketPlayerPosLook packet = (S08PacketPlayerPosLook) e.getPacket();
                e.setCanceled(true);

                if (debug.isToggled()) {
                    Utils.Player.sendMessageToSelf("received s08. sending c06");
                }

                PacketUtils.sendPacket(mc, new C03PacketPlayer.C06PacketPlayerPosLook(
                                packet.getX(),
                                packet.getY(),
                                packet.getZ(),
                                packet.getYaw(),
                                packet.getPitch(),
                                mc.thePlayer.onGround
                        )
                );

                PacketUtils.sendPacket(mc, new C03PacketPlayer.C06PacketPlayerPosLook(
                                mc.thePlayer.posX,
                                mc.thePlayer.posY,
                                mc.thePlayer.posZ,
                                mc.thePlayer.rotationYaw,
                                mc.thePlayer.rotationPitch,
                                mc.thePlayer.onGround
                        )
                );
            }
        } else if (miniblox.isToggled() && miniblox2.isToggled()) {
            Utils.Player.sendMessageToSelf("miniblox and miniblox2 are incompatible");
            miniblox.disable();
            miniblox2.disable();
        }
    }
}